plugins {
	id 'groovy'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	// JACACO!
	id 'jacoco'
	// CODENARC!
	id 'codenarc'
}

apply from: 'config/gradle/codenarc.gradle'

group = 'com.github.jvalentino'
version = '0.0.1'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

configurations {
	systemPath
}

dependencies {

	// Groovy
	implementation 'org.codehaus.groovy:groovy'

	// Spring Boot Magic
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// To be able to upload files
	implementation 'commons-fileupload:commons-fileupload:1.3.1'

	// DB management
	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'

	// Kafka
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'

	// MD5
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'

	// monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// Testing Magic
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.spockframework:spock-core:2.2-groovy-3.0'
	testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.2-groovy-3.0'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'cglib:cglib-nodep:3.3.0'
	testImplementation 'org.objenesis:objenesis:3.3'

}

// JACACO!
tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
	jacoco.excludes = [
			'**/*/*_closure*',
			'**/*/MyServletInitializer*',
			'**/*/UploadConfig*'
	]
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report

}

// https://stackoverflow.com/questions/43192220/how-can-i-verify-the-minimum-coverage-with-some-excluded-classes-and-with-the-ja
jacocoTestCoverageVerification {
	dependsOn jacocoTestReport
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, excludes: [
					'**/*/*_closure*',
					'**/*/MyServletInitializer*',
					'**/*/UploadConfig*'
			])
		}))
	}
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				//minimum = 0.85
			}
		}
	}
}


